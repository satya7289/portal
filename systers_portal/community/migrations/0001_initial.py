# Generated by Django 3.0.8 on 2020-07-21 18:28

import ckeditor.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='Slug')),
                ('order', models.IntegerField(unique=True, verbose_name='Order')),
                ('email', models.EmailField(blank=True, max_length=255, verbose_name='Email')),
                ('mailing_list', models.EmailField(blank=True, max_length=255, verbose_name='Mailing list')),
                ('website', models.URLField(blank=True, max_length=255, verbose_name='Website')),
                ('facebook', models.URLField(blank=True, max_length=255, verbose_name='Facebook')),
                ('googleplus', models.URLField(blank=True, max_length=255, verbose_name='Google+')),
                ('twitter', models.URLField(blank=True, max_length=255, verbose_name='Twitter')),
            ],
            options={
                'verbose_name_plural': 'Communities',
                'permissions': (('add_community_systersuser', 'Add community Systers User'), ('change_community_systersuser', 'Change community Systers User'), ('delete_community_systersuser', 'Delete community Systers User'), ('add_community_news', 'Add community news'), ('change_community_news', 'Change community news'), ('delete_community_news', 'Delete community news'), ('add_community_resource', 'Add community resource'), ('change_community_resource', 'Change community resource'), ('delete_community_resource', 'Delete community resource'), ('add_community_page', 'Add community page'), ('change_community_page', 'Change community page'), ('delete_community_page', 'Delete community page'), ('approve_community_comment', 'Approve community comment'), ('delete_community_comment', 'Delete community comment'), ('approve_community_joinrequest', 'Approve community join request')),
            },
        ),
        migrations.CreateModel(
            name='CommunityPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=150, verbose_name='Slug')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('date_created', models.DateField(auto_now_add=True, verbose_name='Date published')),
                ('date_modified', models.DateField(auto_now=True, verbose_name='Date last modified')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Content')),
                ('order', models.IntegerField(verbose_name='Order')),
            ],
        ),
        migrations.CreateModel(
            name='RequestCommunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Proposed Community Name')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='Slug')),
                ('order', models.PositiveIntegerField(blank=True, null=True, verbose_name='Order')),
                ('email', models.EmailField(blank=True, max_length=255, verbose_name=' At what email address would you like to be contacted?')),
                ('mailing_list', models.EmailField(blank=True, max_length=255, verbose_name='Mailing list of the community')),
                ('website', models.URLField(blank=True, max_length=255, verbose_name='Link to the website')),
                ('facebook', models.URLField(blank=True, max_length=255, verbose_name='Link to the community on Facebook')),
                ('googleplus', models.URLField(blank=True, max_length=255, verbose_name='Link to the community on Google+')),
                ('twitter', models.URLField(blank=True, max_length=255, verbose_name='Link to the community on Twitter')),
                ('is_member', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default=None, max_length=25, verbose_name='Are you a member of Systers?')),
                ('email_id', models.EmailField(blank=True, max_length=255, verbose_name='What email have you used to sign up for Systers?')),
                ('type_community', models.CharField(choices=[('Affinity Group', 'Affinity Group (Latinas in Computing, LGBT, etc)'), ('Special Interest Group', 'Special Interest Group (Student Researchers, Systers in Government,Women in Cyber Security, etc) '), ('Email list', 'Email list (using Mailman3)'), ('Other', 'Other')], default=None, max_length=255, verbose_name='Type of Community')),
                ('other_community_type', models.CharField(blank=True, max_length=255, verbose_name='Other type of community(Please specify)')),
                ('community_channel', models.CharField(choices=[('Existing Social Media Channels ', 'Existing Social Media Channels '), ('Request New Social Media Channels ', 'Request New Social Media Channels ')], default=None, max_length=255, verbose_name='Online Community Channels')),
                ('social_presence', models.CharField(max_length=255, null=True, verbose_name='Check off all the social media accounts you can manage                                    for your proposed community:')),
                ('other_account', models.CharField(blank=True, max_length=25, verbose_name='Other social channel(Please specify)')),
                ('demographic_target_count', models.TextField(blank=True, verbose_name='Who will it serve (                                                explain target demographics and number of people):')),
                ('purpose', models.TextField(blank=True, verbose_name='Explain the purpose and                               need for this group or account:')),
                ('is_avail_volunteer', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default=None, max_length=25, verbose_name='Do you have volunteers committed?')),
                ('count_avail_volunteer', models.PositiveIntegerField(default=0, verbose_name='If yes, how many?')),
                ('content_developer', models.TextField(blank=True, verbose_name='Explain the content of this group.                                         What service will this group provide (example: discussion,                                         linksharing, support)? Who will develop the content? What                                         kind of content will be shared in the group? How often                                         will moderators post/engage with users?')),
                ('selection_criteria', models.TextField(blank=True, verbose_name='Will there be screening of new members of will this group be open to anyone?         If there will be screening,what will the criteria for membership be?')),
                ('is_real_time', models.TextField(blank=True, verbose_name=' Will there be real-time meetings in addition to an online community?         (Example, at the Grace Hopper Celebration; regional meetings; etc)')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
            ],
        ),
    ]
